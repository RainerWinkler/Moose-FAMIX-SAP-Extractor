ifdef::env-github[]
:imagesdir: https://github.com/SAP2Moose/SAP2Moose/blob/master/Documentation/images/
endif::[]

:toc:
:toc-placement!:
toc::[]
Introduction and Goals
======================

Requirements Overview
---------------------
- Extract model information from a SAP system to be analyzed with Moose and Moose2Model.
- Provides where used informations over multiple levels.
- Provides informations what is used (Downsearch).

Quality Goals
-------------
- Easy to install
- Easy to upgrade
- Does not extract code (Potentially sensitive information shall not be extracted)
- Does not write into the system (Does not destabilize the system)
- Extracts an application that contains of about a view 1000 elements in a few minutes
- Is not able to handle an inconsistent Where Used Index of the extracted SAP system

Stakeholders
------------

.Stake Holders
|===
| Role/Name |Expectations  

|SAP Developer
|Get an overview of the coding elements, there dependences and links to simplify opening them in an editor

|Software Architect
|Get an overwiew of the coding elements. Have the opportunity to display dependencies on class and package level.

|System Owner
|Protect coding. Prevent the system from activities that might destabilize it.
|===



Architecture Constraints
========================
- Has to be easy to install in the analyzed system. A single report with texts should suffice.
- Does not write any information in the analyzed system.
- Uses only a file import to extract informations. Web Calls and other techniques are not allowed.

System Scope and Context
========================
Components of SAP2Moose. Contains also components to maintain, test and documentate (including images used to documentate).

image::SAP2Moose Components.png[SAP2Moose Components]

.Explanation
|===
|Component |Explanation

|SAP2Moose (Global classes and report templates
|To simplify the development, SAP2Moose is developed using global classes

|Report to convert global to local classes to make a simple ABAP report
|This is the coding that converts global classes to local classes of the report that runs in the analyzed SAP system

|Github
|This contains sub components to explain better how texts and images of the documentation are maintained

|png file
|The information how the png file is build is part of the image file. This is an option when it is exported from draw.io. Open the file with draw.io to be able to edit it and include a copy of the diagram when you export it.

|===


Solution Strategy
=================

.Solution Strategy
|===
|Challenge |Solution

|Install logic as a single report without making the development more complex
|Develop with global classes. Convert the coding to local classes of a single report before installation.

|The extractor shall run in older SAP releases
|Do not use modern ABAP statements in the main logic. Use modern in unit tests and supporting code as these are not part of the single report that runs in the analyzed system

|The extractor shall be fast and reliable
|Do not use SAP method and functions to read code components and where used information. Reading the database tables is faster and more robust.

|===

Building Block View {#section-building-block-view}
===================

Whitebox Overall System {#_whitebox_overall_system}
-----------------------

***\<Overview Diagram\>***

Motivation

:   *\<text explanation\>*

Contained Building Blocks

:   *\<Description of contained building block (black boxes)\>*

Important Interfaces

:   *\<Description of important interfaces\>*

### \<Name black box 1\> {#__name_black_box_1}

*\<Purpose/Responsibility\>*

*\<Interface(s)\>*

*\<(Optional) Quality/Performance Characteristics\>*

*\<(Optional) Directory/File Location\>*

*\<(Optional) Fulfilled Requirements\>*

*\<(optional) Open Issues/Problems/Risks\>*

### \<Name black box 2\> {#__name_black_box_2}

*\<black box template\>*

### \<Name black box n\> {#__name_black_box_n}

*\<black box template\>*

### \<Name interface 1\> {#__name_interface_1}

...

### \<Name interface m\> {#__name_interface_m}

Level 2 {#_level_2}
-------

### White Box *\<building block 1\>* {#_white_box_emphasis_building_block_1_emphasis}

*\<white box template\>*

### White Box *\<building block 2\>* {#_white_box_emphasis_building_block_2_emphasis}

*\<white box template\>*

...

### White Box *\<building block m\>* {#_white_box_emphasis_building_block_m_emphasis}

*\<white box template\>*

Level 3 {#_level_3}
-------

### White Box \<\_building block x.1\_\> {#_white_box_building_block_x_1}

*\<white box template\>*

### White Box \<\_building block x.2\_\> {#_white_box_building_block_x_2}

*\<white box template\>*

### White Box \<\_building block y.1\_\> {#_white_box_building_block_y_1}

*\<white box template\>*

Runtime View {#section-runtime-view}
============

\<Runtime Scenario 1\> {#__runtime_scenario_1}
----------------------

-   *\<insert runtime diagram or textual description of the scenario\>*

-   *\<insert description of the notable aspects of the interactions
    between the building block instances depicted in this diagram.\>*

\<Runtime Scenario 2\> {#__runtime_scenario_2}
----------------------

... {#_}
---

\<Runtime Scenario n\> {#__runtime_scenario_n}
----------------------

Deployment View {#section-deployment-view}
===============

Infrastructure Level 1 {#_infrastructure_level_1}
----------------------

***\<Overview Diagram\>***

Motivation

:   *\<explanation in text form\>*

Quality and/or Performance Features

:   *\<explanation in text form\>*

Mapping of Building Blocks to Infrastructure

:   *\<description of the mapping\>*

Infrastructure Level 2 {#_infrastructure_level_2}
----------------------

### *\<Infrastructure Element 1\>* {#__emphasis_infrastructure_element_1_emphasis}

*\<diagram + explanation\>*

### *\<Infrastructure Element 2\>* {#__emphasis_infrastructure_element_2_emphasis}

*\<diagram + explanation\>*

...

### *\<Infrastructure Element n\>* {#__emphasis_infrastructure_element_n_emphasis}

*\<diagram + explanation\>*

Cross-cutting Concepts {#section-concepts}
======================

*\<Concept 1\>* {#__emphasis_concept_1_emphasis}
---------------

*\<explanation\>*

*\<Concept 2\>* {#__emphasis_concept_2_emphasis}
---------------

*\<explanation\>*

...

*\<Concept n\>* {#__emphasis_concept_n_emphasis}
---------------

*\<explanation\>*

Design Decisions {#section-design-decisions}
================

Quality Requirements {#section-quality-scenarios}
====================

Quality Tree {#_quality_tree}
------------

Quality Scenarios {#_quality_scenarios}
-----------------

Risks and Technical Debts {#section-technical-risks}
=========================

Glossary {#section-glossary}
========

+-----------------------------------+-----------------------------------+
| Term                              | Definition                        |
+===================================+===================================+
| \<Term-1\>                        | \<definition-1\>                  |
+-----------------------------------+-----------------------------------+
| \<Term-2\>                        | \<definition-2\>                  |
+-----------------------------------+-----------------------------------+
